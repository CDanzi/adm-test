<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<webApiHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <versionUuid>dd350741-d9a7-4c4e-a13a-8d52c2b78295</versionUuid>
    <webApi a:uuid="0a39de40-5941-4148-beb7-d50f9b4e819f" name="CMF_queryProducts">
        <a:description>Displays a list of all available products. Resultset can be returned in XML or JSON format and filtered by name, category, or price range.
Parameters:
startIndex (Integer): Indicates initial index to retrieve. If greater than amount of data available, the max index will be used instead.
format (text): Indicates resultset format. Available options are json or xml. Default is json.
nameFilter (text): Filters by the specified name. Partial match supported.
categoryFilter (text): Filters by specified product type. Partial match supported.
priceFilterLow (decimal): Indicates lower bound of price range.
priceFilterHigh (decimal): Indicates higher bound of price range.</a:description>
        <a:expression>with(
  /*
  * Retrieve totalCount on dataset
  */
  local!maxIndex: #"SYSTEM_SYSRULES_queryEntity"(
    #"_a-0000d9c4-bcac-8000-9ba2-011c48011c48_4329",
    #"SYSTEM_SYSRULES_query"(
      selection: #"SYSTEM_SYSRULES_querySelection"({#"SYSTEM_SYSRULES_queryColumn"(field: "id")}),
      pagingInfo: #"SYSTEM_SYSRULES_pagingInfo"(1,1,null)
    )
  ).totalCount,
  /*
  * Validate start index. Reset to 1 or max if outside of bound. 1 if invalid parameter found
  */
  local!startIndex: if(
    or(
      isnull(http!request.queryParameters.startIndex),
      tointeger(http!request.queryParameters.startIndex) &lt; 1
    ),
    1,
    if(tointeger(http!request.queryParameters.startIndex) &gt; local!maxIndex,
      local!maxIndex,
      tointeger(http!request.queryParameters.startIndex)
    )
  ),
  /*
  * Retrieve up to 50 records from local!startIndex and store in local!records
  */
  local!records: #"SYSTEM_SYSRULES_queryEntity"(
    #"_a-0000d9c4-bcac-8000-9ba2-011c48011c48_4329",
    #"SYSTEM_SYSRULES_query"(
      logicalExpression: if(
        and(
          isnull(http!request.queryParameters.categoryFilter),
          isnull(http!request.queryParameters.nameFilter),
          isnull(http!request.queryParameters.priceFilterLow),
          isnull(http!request.queryParameters.priceFilterHigh)
        ),
        null,
        #"SYSTEM_SYSRULES_queryLogicalExpression"(
          operator: "AND",
          filters: {
            if(
              isnull(http!request.queryParameters.categoryFilter),
              {},
              #"SYSTEM_SYSRULES_queryFilter"(field: "productCategory", operator: "includes", value: http!request.queryParameters.categoryFilter)
            ),
            if(
              isnull(http!request.queryParameters.nameFilter),
              {},
              #"SYSTEM_SYSRULES_queryFilter"(field: "name", operator: "includes", value: http!request.queryParameters.nameFilter)
            ),
            if(
              isnull(http!request.queryParameters.priceFilterLow),
              {},
              if(
                isnull(http!request.queryParameters.priceFilterHigh),
                #"SYSTEM_SYSRULES_queryFilter"(field: "price", operator: "&gt;=", value: todecimal(http!request.queryParameters.priceFilterLow)),
                #"SYSTEM_SYSRULES_queryFilter"(
                  field: "price",
                  operator: "between",
                  value: {
                    todecimal(http!request.queryParameters.priceFilterLow),
                    todecimal(http!request.queryParameters.priceFilterHigh)
                  }
                )  
              )
            ),
            if(
              isnull(http!request.queryParameters.priceFilterHigh),
              {},
              if(
                isnull(http!request.queryParameters.priceFilterLow),
                #"SYSTEM_SYSRULES_queryFilter"(field: "price", operator: "&lt;=", value: todecimal(http!request.queryParameters.priceFilterHigh)),
                {}
              )
            )
          }
        )
      ),
      pagingInfo: #"SYSTEM_SYSRULES_pagingInfo"(
        startIndex: local!startIndex,
        batchSize: 50,
        sort: #"SYSTEM_SYSRULES_sortInfo"("id", true)
      )
    )
  ),

  /*
  * Construct an HTTP response that contains the information that we just stored
  * in "local!records".
  */
  #"SYSTEM_SYSRULES_httpResponse"(
    /*
    * Set an HTTP header that tells the client that the body of the response
    * will be JSON-encoded.
    */
    headers: {
      #"SYSTEM_SYSRULES_httpHeader"(name: "content-type", value: "application/json")
    },
    /*
    * JSON-encode the value of "local!records" and place it in the response body.
    */
    body: if(
      http!request.queryParameters.format="xml",
      fn!toxml(local!records, true, "productDetails"),
      #"SYSTEM_SYSRULES_toJson"(value: local!records)
    )
  )
)</a:expression>
        <a:urlAlias>cmf_queryProducts</a:urlAlias>
        <a:httpMethod>GET</a:httpMethod>
        <a:system>false</a:system>
    </webApi>
    <roleMap>
        <role name="web_api_editor">
            <users/>
            <groups>
                <groupUuid>_e-0000da5f-caa8-8000-9aee-01075c01075c_16</groupUuid>
            </groups>
        </role>
        <role name="web_api_administrator">
            <users/>
            <groups>
                <groupUuid>_e-0000d9c4-bcae-8000-9aee-01075c01075c_17</groupUuid>
            </groups>
        </role>
    </roleMap>
    <typedValue>
        <type>
            <name>WebApiRequest?list</name>
            <namespace>http://www.appian.com/ae/types/2009</namespace>
        </type>
        <value>
            <el>
                <a:path/>
                <a:body/>
            </el>
        </value>
    </typedValue>
    <history>
        <historyInfo versionUuid="dd350741-d9a7-4c4e-a13a-8d52c2b78295"/>
    </history>
</webApiHaul>
